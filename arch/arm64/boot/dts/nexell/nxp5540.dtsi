/*
 * Copyright (C) 2016  Nexell Co., Ltd.
 * Author: Youngbok, Park <ybpark@nexell.co.kr>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <dt-bindings/soc/nxp5540-base.h>
#include <dt-bindings/reset/nexell,nxp5540-reset.h>
#include <dt-bindings/interrupt-controller/nxp5540-irq.h>
#include <dt-bindings/pinctrl/nexell,pinctrl.h>

/ {
	model = "nexell soc";
	compatible = "nexell,nxp5540";
	#address-cells = <0x1>;
	#size-cells = <0x1>;

	aliases {
		i2s0	 = &i2s_0;
		i2s1	 = &i2s_1;
		i2s2	 = &i2s_2;
		i2s3	 = &i2s_3;

		pinctrl0 = &pinctrl_0;
	};

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	cpus {
		#address-cells = <0x2>;
		#size-cells = <0x0>;

		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0 0x0>;
			enable-method = "psci";
			cpu-release-addr = < 0x1 0xc0010230 >;
			#cooling-cells = <2>;
			cpu-idle-states =<&CPU_SLEEP>;
		};

		cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0 0x1>;
			enable-method = "psci";
			cpu-release-addr = < 0x1 0xc0010230 >;
			cpu-idle-states =<&CPU_SLEEP>;
		};

		cpu2: cpu@2 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0 0x2>;
			enable-method = "psci";
			cpu-release-addr = < 0x1 0xc0010230 >;
			cpu-idle-states =<&CPU_SLEEP>;
		};

		cpu3: cpu@3 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0 0x3>;
			enable-method = "psci";
			cpu-release-addr = < 0x1 0xc0010230 >;
			cpu-idle-states =<&CPU_SLEEP>;
		};


		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
				core1 {
					cpu = <&cpu1>;
				};
				core2 {
					cpu = <&cpu2>;
				};
				core3 {
					cpu = <&cpu3>;
				};
			};
		};

		idle-states {
			CPU_SLEEP: sleep {
				compatible = "nexell,idle-state";
				arm,psci-suspend-param = <0x0000000>;
				entry-latency-us = <150>;
				exit-latency-us = <200>;
				min-residency-us = <2000>;
			};
		};
	};


	soc {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <1>;
		reg = <0xc0000000 0x300000>;
		interrupt-parent = <&gic>;
		ranges;

		gic:interrupt-controller@c0009000 {
			compatible = "arm,gic-400";
			interrupt-controller;
			#interrupt-cells = <3>;
			reg	= <0xC0009000 0x1000>, <0xC000a000 0x100>;
		};

		nxp5540_reset:reset {
			#reset-cells = <2>;
			compatible = "nexell,nxp5540-reset";
			reg = <PHYS_BASE_SYS_RSTCON 0x800
			       PHYS_BASE_TBUS_RSTCON 0x800
			       PHYS_BASE_LBUS_RSTCON 0x800
			       PHYS_BASE_BBUS_RSTCON 0x800
			       PHYS_BASE_CODA_RSTCON 0x800
			       PHYS_BASE_DISP_RSTCON 0x800
			       PHYS_BASE_USB_RSTCON 0x800
			       PHYS_BASE_HDMI_RSTCON 0x800
			       PHYS_BASE_WAVE_RSTCON 0x800
			       PHYS_BASE_DREX_RSTCON 0x800
			       PHYS_BASE_WAVE420_RSTCON 0x800
			       PHYS_BASE_CPU_RSTCON 0x800
			       PHYS_BASE_PERICLK_RSTCON 0x800>;
			status = "okay";
		};

		pinctrl_0: pinctrl {
			compatible = "nexell,nxp5540-pinctrl";
			reg = <PHYS_BASE_GPIOA 0x1000
			       PHYS_BASE_GPIOB 0x1000
			       PHYS_BASE_GPIOC 0x1000
			       PHYS_BASE_GPIOD 0x1000
			       PHYS_BASE_GPIOE 0x1000
			       PHYS_BASE_GPIOF 0x1000
			       PHYS_BASE_GPIOG 0x1000
			       PHYS_BASE_GPIOH 0x1000
			       PHYS_BASE_ALIVE 0x200>;
			#address-cells = <1>;
			#size-cells = <1>;
			interrupts = <0 IRQ_GPIOA 0>,
				     <0 IRQ_GPIOB 0>,
				     <0 IRQ_GPIOC 0>,
				     <0 IRQ_GPIOD 0>,
				     <0 IRQ_GPIOE 0>,
				     <0 IRQ_GPIOF 0>,
				     <0 IRQ_GPIOG 0>,
				     <0 IRQ_GPIOH 0>,
				     <0 IRQ_ALIVE 0>;
		};

		amba {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "arm,amba-bus";
			interrupt-parent = <&gic>;
			ranges;

			dmac0: dmac@0x20780000 {
				compatible = "arm,pl330", "arm,primecell";
				reg = <PHYS_BASE_DMAC0 0x1000>;
				interrupts = <0 IRQ_DMA0 0>;
				#dma-cells = <1>;
				#dma-channels = <4>;
				#dma-requests = <32>;
			};

			dmac1: dmac@0x20790000 {
				compatible = "arm,pl330", "arm,primecell";
				reg = <PHYS_BASE_DMAC1 0x1000>;
				interrupts = <0 IRQ_DMA1 0>;
				#dma-cells = <1>;
				#dma-channels = <4>;
				#dma-requests = <32>;
			};

			sdma0: sdma@0x207a0000 {
				compatible = "arm,pl330", "arm,primecell";
				reg = <PHYS_BASE_SEC_DMA0 0x1000>;
				interrupts = <0 IRQ_SDMA0 0>;
				#dma-cells = <1>;
				#dma-channels = <4>;
				#dma-requests = <32>;
			};

			sdma1: sdma@0x207b0000 {
				compatible = "arm,pl330", "arm,primecell";
				reg = <PHYS_BASE_SEC_DMA1 0x1000>;
				interrupts = <0 IRQ_SDMA1 0>;
				#dma-cells = <1>;
				#dma-channels = <4>;
				#dma-requests = <32>;
			};

			mdmac: mdmac@0x207c0000 {
				compatible = "arm,pl330", "arm,primecell";
				reg = <PHYS_BASE_MDMAC0 0x1000>;
				interrupts = <0 IRQ_MDMA 0>;
				#dma-cells = <1>;
				#dma-channels = <4>;
				#dma-requests = <32>;
			};
		};

		i2s_0:i2s@20830000 {
			  compatible = "nexell,nexell-i2s";
			  reg = <PHYS_BASE_I2S0 0x1000>;
			  dmas = <&dmac0 12 0>, <&dmac0 13 0>;
			  dma-names = "tx", "rx";
			  resets = <&nxp5540_reset RESET_ID_I2S_0_APB>,
					<&nxp5540_reset RESET_ID_I2S_0_CORE>;
			  reset-names = "i2s-apb-reset", "i2s-reset";
			  pinctrl-names = "default";
			  pinctrl-0 = <&i2s0_bus>;
			  master-mode = <1>;
			  mclk-in = <0>;
			  trans-mode = <0>;
			  frame-bit = <32>;
			  sample-rate = <48000>;
			  pre-supply-mclk = <1>;
			  status = "disabled";
		};

		i2s_1:i2s@20840000 {
			  compatible = "nexell,nexell-i2s";
			  reg = <PHYS_BASE_I2S1 0x1000>;
			  dmas = <&dmac0 14 0>, <&dmac0 15 0>;
			  dma-names = "tx", "rx";
			  resets = <&nxp5540_reset RESET_ID_I2S_1_APB>,
					<&nxp5540_reset RESET_ID_I2S_1_CORE>;
			  reset-names = "i2s-apb-reset", "i2s-reset";
			  pinctrl-names = "default";
			  pinctrl-0 = <&i2s1_bus>;
			  master-mode = <1>;
			  mclk-in = <0>;
			  trans-mode = <0>;
			  frame-bit = <32>;
			  sample-rate = <48000>;
			  pre-supply-mclk = <1>;
			  status = "disabled";
		};

		i2s_2:i2s@20850000 {
			  compatible = "nexell,nexell-i2s";
			  reg = <PHYS_BASE_I2S2 0x1000>;
			  dmas = <&dmac1 0 0>, <&dmac1 1 0>;
			  dma-names = "tx", "rx";
			  resets = <&nxp5540_reset RESET_ID_I2S_2_APB>,
					<&nxp5540_reset RESET_ID_I2S_2_CORE>;
			  reset-names = "i2s-apb-reset", "i2s-reset";
			  pinctrl-names = "default";
			  pinctrl-0 = <&i2s2_bus>;
			  master-mode = <1>;
			  mclk-in = <0>;
			  trans-mode = <0>;
			  frame-bit = <32>;
			  sample-rate = <48000>;
			  pre-supply-mclk = <1>;
			  status = "disabled";
		};

		i2s_3:i2s@20860000 {
			  compatible = "nexell,nexell-i2s";
			  reg = <PHYS_BASE_I2S3 0x1000>;
			  dmas = <&dmac1 19 0>, <&dmac1 20 0>;
			  dma-names = "tx", "rx";
			  resets = <&nxp5540_reset RESET_ID_I2S_3_APB>,
					<&nxp5540_reset RESET_ID_I2S_3_CORE>;
			  reset-names = "i2s-apb-reset", "i2s-reset";

			  pinctrl-names = "default";
			  pinctrl-0 = <&i2s3_bus>;
			  master-mode = <1>;
			  mclk-in = <0>;
			  trans-mode = <0>;
			  frame-bit = <32>;
			  sample-rate = <48000>;
			  pre-supply-mclk = <1>;
			  status = "disabled";
		};
	}; /*** soc ***/
};

#include "nxstream.dtsi"
#include "nxp5540-pinctrl.dtsi"
